// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Google.ProtocolBuffers {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class ProtobufMsgBuyItem {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      registry.Add(global::Google.ProtocolBuffers.MsgBuyItem.msgBuyItem);
    }
    #endregion
    #region Static variables
    #endregion
    #region Extensions
    internal static readonly object Descriptor;
    static ProtobufMsgBuyItem() {
      Descriptor = null;
      global::Google.ProtocolBuffers.MsgBuyItem.msgBuyItem = 
        new pb::GeneratedExtensionLite<global::Google.ProtocolBuffers.ServerMessage, global::Google.ProtocolBuffers.MsgBuyItem>(
          "protobuf.msgBuyItem.msgBuyItem",
          global::Google.ProtocolBuffers.ServerMessage.DefaultInstance,
          null,
          global::Google.ProtocolBuffers.MsgBuyItem.DefaultInstance,
          null,
          global::Google.ProtocolBuffers.MsgBuyItem.MsgBuyItemFieldNumber,
          pbd::FieldType.Message);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgBuyItem : pb::GeneratedMessageLite<MsgBuyItem, MsgBuyItem.Builder> {
    private MsgBuyItem() { }
    private static readonly MsgBuyItem defaultInstance = new MsgBuyItem().MakeReadOnly();
    private static readonly string[] _msgBuyItemFieldNames = new string[] { "ids", "itemId", "itemName" };
    private static readonly uint[] _msgBuyItemFieldTags = new uint[] { 26, 16, 10 };
    public static MsgBuyItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgBuyItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgBuyItem ThisMessage {
      get { return this; }
    }
    
    public const int MsgBuyItemFieldNumber = 103;
    public static pb::GeneratedExtensionLite<global::Google.ProtocolBuffers.ServerMessage, global::Google.ProtocolBuffers.MsgBuyItem> msgBuyItem;
    public const int ItemNameFieldNumber = 1;
    private bool hasItemName;
    private string itemName_ = "";
    public bool HasItemName {
      get { return hasItemName; }
    }
    public string ItemName {
      get { return itemName_; }
    }
    
    public const int ItemIdFieldNumber = 2;
    private bool hasItemId;
    private long itemId_;
    public bool HasItemId {
      get { return hasItemId; }
    }
    public long ItemId {
      get { return itemId_; }
    }
    
    public const int IdsFieldNumber = 3;
    private int idsMemoizedSerializedSize;
    private pbc::PopsicleList<int> ids_ = new pbc::PopsicleList<int>();
    public scg::IList<int> IdsList {
      get { return pbc::Lists.AsReadOnly(ids_); }
    }
    public int IdsCount {
      get { return ids_.Count; }
    }
    public int GetIds(int index) {
      return ids_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgBuyItemFieldNames;
      if (hasItemName) {
        output.WriteString(1, field_names[2], ItemName);
      }
      if (hasItemId) {
        output.WriteInt64(2, field_names[1], ItemId);
      }
      if (ids_.Count > 0) {
        output.WritePackedInt32Array(3, field_names[0], idsMemoizedSerializedSize, ids_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasItemName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ItemName);
        }
        if (hasItemId) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, ItemId);
        }
        {
          int dataSize = 0;
          foreach (int element in IdsList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          if (ids_.Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
          }
          idsMemoizedSerializedSize = dataSize;
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasItemName) hash ^= itemName_.GetHashCode();
      if (hasItemId) hash ^= itemId_.GetHashCode();
      foreach(int i in ids_)
        hash ^= i.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      MsgBuyItem other = obj as MsgBuyItem;
      if (other == null) return false;
      if (hasItemName != other.hasItemName || (hasItemName && !itemName_.Equals(other.itemName_))) return false;
      if (hasItemId != other.hasItemId || (hasItemId && !itemId_.Equals(other.itemId_))) return false;
      if(ids_.Count != other.ids_.Count) return false;
      for(int ix=0; ix < ids_.Count; ix++)
        if(!ids_[ix].Equals(other.ids_[ix])) return false;
      return true;
    }
    
    public override void PrintTo(global::System.IO.TextWriter writer) {
      PrintField("itemName", hasItemName, itemName_, writer);
      PrintField("itemId", hasItemId, itemId_, writer);
      PrintField("ids", ids_, writer);
    }
    #endregion
    
    public static MsgBuyItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgBuyItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgBuyItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgBuyItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgBuyItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgBuyItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgBuyItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgBuyItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgBuyItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgBuyItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgBuyItem MakeReadOnly() {
      ids_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgBuyItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilderLite<MsgBuyItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgBuyItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgBuyItem result;
      
      private MsgBuyItem PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgBuyItem original = result;
          result = new MsgBuyItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgBuyItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override MsgBuyItem DefaultInstanceForType {
        get { return global::Google.ProtocolBuffers.MsgBuyItem.DefaultInstance; }
      }
      
      public override MsgBuyItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is MsgBuyItem) {
          return MergeFrom((MsgBuyItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgBuyItem other) {
        if (other == global::Google.ProtocolBuffers.MsgBuyItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasItemName) {
          ItemName = other.ItemName;
        }
        if (other.HasItemId) {
          ItemId = other.ItemId;
        }
        if (other.ids_.Count != 0) {
          result.ids_.Add(other.ids_);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgBuyItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgBuyItemFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasItemName = input.ReadString(ref result.itemName_);
              break;
            }
            case 16: {
              result.hasItemId = input.ReadInt64(ref result.itemId_);
              break;
            }
            case 26:
            case 24: {
              input.ReadInt32Array(tag, field_name, result.ids_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasItemName {
        get { return result.hasItemName; }
      }
      public string ItemName {
        get { return result.ItemName; }
        set { SetItemName(value); }
      }
      public Builder SetItemName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasItemName = true;
        result.itemName_ = value;
        return this;
      }
      public Builder ClearItemName() {
        PrepareBuilder();
        result.hasItemName = false;
        result.itemName_ = "";
        return this;
      }
      
      public bool HasItemId {
        get { return result.hasItemId; }
      }
      public long ItemId {
        get { return result.ItemId; }
        set { SetItemId(value); }
      }
      public Builder SetItemId(long value) {
        PrepareBuilder();
        result.hasItemId = true;
        result.itemId_ = value;
        return this;
      }
      public Builder ClearItemId() {
        PrepareBuilder();
        result.hasItemId = false;
        result.itemId_ = 0L;
        return this;
      }
      
      public pbc::IPopsicleList<int> IdsList {
        get { return PrepareBuilder().ids_; }
      }
      public int IdsCount {
        get { return result.IdsCount; }
      }
      public int GetIds(int index) {
        return result.GetIds(index);
      }
      public Builder SetIds(int index, int value) {
        PrepareBuilder();
        result.ids_[index] = value;
        return this;
      }
      public Builder AddIds(int value) {
        PrepareBuilder();
        result.ids_.Add(value);
        return this;
      }
      public Builder AddRangeIds(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.ids_.Add(values);
        return this;
      }
      public Builder ClearIds() {
        PrepareBuilder();
        result.ids_.Clear();
        return this;
      }
    }
    static MsgBuyItem() {
      object.ReferenceEquals(global::Google.ProtocolBuffers.ProtobufMsgBuyItem.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
